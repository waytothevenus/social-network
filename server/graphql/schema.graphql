type User {
  name: String!
  liked: [Post] @relation(name: "LIKED", direction: "OUT")
  created: [Post] @relation(name: "POSTED", direction: "OUT")
  following: [User] @relation(name: "FOLLOWS", direction: "OUT")
  followers: [User] @relation(name: "FOLLOWS", direction: "IN")
  followingCount: Int
  @cypher(statement: "MATCH (this: User)-[:FOLLOWS]->(u: User) RETURN count(u)")
  followerCount: Int
  @cypher(statement: "MATCH (this: User)<-[:FOLLOWS]-(u: User) RETURN count(u)")
  commonWith(filter: _UserFilter): [User]
  @cypher(
    statement: "MATCH (u:User)-[:FOLLOWS]->(c:User)<-[:FOLLOWS]-(this) WHERE id(u)= $filter._id OR u.name = $filter.name RETURN c"
  )
}

type Post {
  title: String!
  content: String!
  likes: Int
  @cypher(statement: "MATCH (this: Post)<-[:LIKED]-(u:User) RETURN count(u)")
  Author: User
  @cypher(statement: "MATCH (this: Post)<-[:POSTED]-(u:User) RETURN u LIMIT 1")
}
